# Databricks notebook source
# Databricks notebook source
from pyspark.sql import SparkSession

# Create a Spark session
spark_session = SparkSession.builder.appName("nip_refined").getOrCreate()
# SQL code without %sql magic command
sql_code = """CREATE OR REPLACE TABLE nip_refined.policy (
  as_of DATE,
  book STRING,
  account_name STRING,
  specialty_program STRING,
  carrier STRING,
  LOB STRING,
  apd_premium DOUBLE,
  axa_broker STRING,
  axa_other_mod_2 DOUBLE,
  axa_other_mod_3 DOUBLE,
  axa_other_mod_4 DOUBLE,
  aggregate_limit DOUBLE,
  annual_broker_fee DOUBLE,
  annual_expenses DOUBLE,
  annual_fees DOUBLE,
  annual_fronting_charge DOUBLE,
  annual_gross_total_premium DOUBLE,
  annual_net_premium DOUBLE,
  annual_other DOUBLE,
  assigned_risk STRING,
  auto_liability_premium DOUBLE,
  billing_code STRING,
  broker STRING,
  ca_territory_credit DOUBLE,
  class_code_description STRING,
  comments STRING,
  commission_contribution STRING,
  created_by STRING,
  created_by_data_process STRING,
  policy_created_date DATE,
  created_date_rc_pol DATE,
  damage_premises DOUBLE,
  deductible_limit_aggregate DOUBLE,
  deductible_limit_amount DOUBLE,
  deductible_limit_description STRING,
  department_of_transportation_num STRING,
  pol_eff_dt DATE,
  endorsements_broker_fee DOUBLE,
  endorsements_expenses DOUBLE,
  endorsements_fees DOUBLE,
  endorsements_fronting_charge DOUBLE,
  endorsements_gross_total_premium DOUBLE,
  endorsements_net_premium DOUBLE,
  endorsements_other DOUBLE,
  equipment_premium DOUBLE,
  expense_mod DOUBLE,
  experience_mod DOUBLE,
  pol_exp_dt DATE,
  extended_reporting_date DATE,
  fein STRING,
  uw_company STRING,
  gic_score DOUBLE,
  governing_class_code STRING,
  id_for_loads STRING,
  insured_address_1 STRING,
  insured_address_2 STRING,
  insured_city STRING,
  insured_name STRING,
  insured_state STRING,
  insured_zip STRING,
  insurer_pct DOUBLE,
  insurer_limit_aggregate DOUBLE,
  insurer_limit_amount DOUBLE,
  insurer_limit_description STRING,
  insurer_limit_excess_of DOUBLE,
  is_this_tax STRING,
  last_updated_by STRING,
  policy_last_updated_date DATE,
  lead_insurer STRING,
  loss_ratio DOUBLE,
  mac_id STRING,
  marketing_plan STRING,
  medical_expense STRING,
  model_year DOUBLE,
  non_admitted_factor STRING,
  occurrence_limit STRING,
  organization STRING,
  account_id STRING,
  original_lob STRING,
  other_mod DOUBLE,
  package_mod DOUBLE,
  personal_advertising_injury STRING,
  policy_cancel_date STRING,
  policy_number STRING,
  policy_postal_code STRING,
  policy_renewal STRING,
  policy_state STRING,
  policy_transaction_type STRING,
  policy_trigger STRING,
  policy_year DOUBLE,
  valen_score STRING,
  primary_coverage STRING,
  processing_layer DOUBLE,
  product_code STRING,
  product_comp_works STRING,
  program_id STRING,
  program_name_link STRING,
  retro_date DATE,
  sir_limit_aggregate DOUBLE,
  sir_limit_amount DOUBLE,
  schedule_mod DOUBLE,
  program STRING,
  sub_producer_address STRING,
  sub_producer_commission_char STRING,
  sub_producer STRING,
  sub_producer_number STRING,
  total_broker_fee DOUBLE,
  total_expenses DOUBLE,
  total_fees DOUBLE,
  total_fronting_charge DOUBLE,
  total_gross_total_premium DOUBLE,
  total_net_premium DOUBLE,
  total_other DOUBLE,
  type STRING,
  xlia_score DOUBLE,
  xls_score DOUBLE,
  agent_name STRING,
  agent_state_code STRING,
  agent_zip_code STRING,
  aggregate_limit_premops DOUBLE,
  aggregate_limit_products DOUBLE,
  branch STRING,
  business_type_code STRING,
  cancel_flag STRING,
  consent_to_rate_flag STRING,
  employee_count_initial DOUBLE,
  location_count_initial DOUBLE,
  mod_final DOUBLE,
  multiline_policy STRING,
  new_renew_flag DOUBLE,
  policy_vehicles DOUBLE,
  premium_mininum_flag STRING,
  quote_policy_term_number STRING,
  quote_term_effective_date DATE,
  rating_factor_experience_liab DOUBLE,
  rating_factor_experience_pd DOUBLE,
  rating_tier STRING,
  score_id STRING,
  sic_code STRING,
  term_termination_date DATE,
  underwriter STRING,
  written_premium_final DOUBLE,
  written_premium_initial DOUBLE,
  policy_currency_iso_code STRING,
  original_policy_inception_date DATE,
  sub_producer_commission DOUBLE)
;
"""
spark_session.sql(sql_code)
